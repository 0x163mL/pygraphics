
Testing create_picture
         16987 function calls in 2.328 CPU seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    2.328    2.328 <string>:1(<module>)
      999    0.102    0.000    1.955    0.002 Image.py:1698(new)
     1998    0.040    0.000    0.040    0.000 Image.py:440(__init__)
      999    0.057    0.000    0.086    0.000 Image.py:449(_new)
      999    0.014    0.000    0.020    0.000 Image.py:588(load)
      999    0.013    0.000    0.022    0.000 Image.py:82(isStringType)
        1    0.231    0.231    2.328    2.328 ProfilingPictures.py:7(test_create_picture)
      999    0.007    0.000    0.007    0.000 color.py:85(get_rgb)
      999    0.017    0.000    2.097    0.002 media.py:33(create_picture)
      999    0.020    0.000    0.040    0.000 picture.py:108(set_image)
      999    0.009    0.000    0.009    0.000 picture.py:239(set_filename_and_title)
      999    0.021    0.000    1.984    0.002 picture.py:447(create_image)
      999    0.047    0.000    2.080    0.002 picture.py:49(__init__)
      999    1.731    0.002    1.731    0.002 {_imaging.fill}
      999    0.006    0.000    0.006    0.000 {built-in method pixel_access}
     1998    0.009    0.000    0.009    0.000 {isinstance}
      999    0.003    0.000    0.003    0.000 {method 'copy' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 {range}

Report: The slowest call by far is the _imaging.fill, which is inside PIL and which cannot be refactored. The other calls seem to be acceptably efficient.


Testing load_picture
         227776 function calls in 8.815 CPU seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    8.815    8.815 <string>:1(<module>)
      999    0.005    0.000    0.005    0.000 BmpImagePlugin.py:55(_accept)
      999    0.005    0.000    0.005    0.000 GifImagePlugin.py:47(_accept)
      999    0.105    0.000    1.362    0.001 Image.py:1880(open)
      999    0.006    0.000    0.006    0.000 Image.py:281(preinit)
      999    0.019    0.000    0.038    0.000 Image.py:362(_getdecoder)
     1998    0.026    0.000    0.026    0.000 Image.py:440(__init__)
      999    0.030    0.000    0.049    0.000 Image.py:449(_new)
     3996    0.040    0.000    0.040    0.000 Image.py:485(__getattr__)
     2997    0.025    0.000    0.031    0.000 Image.py:588(load)
      999    0.078    0.000    7.228    0.007 Image.py:639(convert)
     1998    0.016    0.000    0.023    0.000 Image.py:82(isStringType)
      999    0.006    0.000    0.008    0.000 Image.py:91(isTupleType)
      999    0.261    0.000    6.943    0.007 ImageFile.py:115(load)
      999    0.011    0.000    0.023    0.000 ImageFile.py:219(load_prepare)
      999    0.004    0.000    0.004    0.000 ImageFile.py:228(load_end)
     8991    0.067    0.000    0.089    0.000 ImageFile.py:508(_safe_read)
      999    0.031    0.000    1.159    0.001 ImageFile.py:63(__init__)
      999    0.134    0.000    0.218    0.000 JpegImagePlugin.py:104(SOF)
     1998    0.072    0.000    0.130    0.000 JpegImagePlugin.py:138(DQT)
      999    0.005    0.000    0.005    0.000 JpegImagePlugin.py:231(_accept)
      999    0.257    0.000    1.102    0.001 JpegImagePlugin.py:242(_open)
    23976    0.199    0.000    0.273    0.000 JpegImagePlugin.py:37(i16)
     4995    0.066    0.000    0.180    0.000 JpegImagePlugin.py:46(Skip)
      999    0.061    0.000    0.124    0.000 JpegImagePlugin.py:50(APP)
        1    0.018    0.018    8.815    8.815 ProfilingPictures.py:12(test_load_picture)
      999    0.016    0.000    0.053    0.000 genericpath.py:26(isfile)
      999    0.014    0.000    8.797    0.009 media.py:27(load_picture)
      999    0.014    0.000    0.026    0.000 picture.py:108(set_image)
      999    0.025    0.000    0.111    0.000 picture.py:239(set_filename_and_title)
      999    0.026    0.000    8.616    0.009 picture.py:441(load_image)
      999    0.021    0.000    0.033    0.000 picture.py:454(get_short_path)
      999    0.031    0.000    8.783    0.009 picture.py:49(__init__)
      999    0.005    0.000    0.005    0.000 stat.py:24(S_IFMT)
      999    0.008    0.000    0.013    0.000 stat.py:49(S_ISREG)
      999    0.012    0.000    0.012    0.000 {_imaging.new}
      999    0.007    0.000    0.007    0.000 {apply}
      999    0.159    0.000    0.159    0.000 {built-in method convert}
      999    6.460    0.006    6.460    0.006 {built-in method decode}
     1998    0.006    0.000    0.006    0.000 {built-in method pixel_access}
      999    0.005    0.000    0.005    0.000 {built-in method setimage}
      999    0.004    0.000    0.004    0.000 {divmod}
      999    0.004    0.000    0.004    0.000 {getattr}
      999    0.020    0.000    0.032    0.000 {hasattr}
     3996    0.009    0.000    0.009    0.000 {isinstance}
    12987    0.022    0.000    0.022    0.000 {len}
     3996    0.009    0.000    0.009    0.000 {method 'append' of 'list' objects}
      999    0.004    0.000    0.004    0.000 {method 'copy' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
     9990    0.018    0.000    0.018    0.000 {method 'has_key' of 'dict' objects}
    39960    0.195    0.000    0.195    0.000 {method 'read' of 'file' objects}
     1998    0.011    0.000    0.011    0.000 {method 'seek' of 'file' objects}
      999    0.005    0.000    0.005    0.000 {method 'sort' of 'list' objects}
      999    0.005    0.000    0.005    0.000 {method 'split' of 'str' objects}
      999    0.024    0.000    0.024    0.000 {open}
    62937    0.101    0.000    0.101    0.000 {ord}
      999    0.024    0.000    0.024    0.000 {posix.stat}
     1000    0.004    0.000    0.004    0.000 {range}


Report: The "built-in method decode" is incredibly slow, relative to every other call made from this method. 


Testing crop_picture
         26994 function calls in 4.354 CPU seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    4.354    4.354 <string>:1(<module>)
      999    0.021    0.000    0.033    0.000 Image.py:1647(__init__)
      999    0.025    0.000    1.654    0.002 Image.py:1664(load)
        1    0.000    0.000    0.009    0.009 Image.py:1698(new)
     2000    0.031    0.000    0.031    0.000 Image.py:440(__init__)
     1000    0.037    0.000    0.059    0.000 Image.py:449(_new)
     1999    0.019    0.000    0.028    0.000 Image.py:588(load)
      999    0.041    0.000    3.808    0.004 Image.py:715(copy)
      999    0.015    0.000    0.059    0.000 Image.py:735(crop)
        1    0.000    0.000    0.000    0.000 Image.py:82(isStringType)
        1    0.021    0.021    4.354    4.354 ProfilingPictures.py:17(test_crop_picture)
        1    0.000    0.000    0.000    0.000 color.py:85(get_rgb)
        1    0.000    0.000    0.009    0.009 media.py:33(create_picture)
      999    0.129    0.000    4.300    0.004 media.py:40(crop_picture)
      999    0.008    0.000    0.013    0.000 media.py:61(get_width)
      999    0.008    0.000    0.011    0.000 media.py:67(get_height)
     1998    0.021    0.000    0.036    0.000 picture.py:102(has_coordinates)
     1000    0.215    0.000    0.231    0.000 picture.py:108(set_image)
        1    0.000    0.000    0.000    0.000 picture.py:239(set_filename_and_title)
     2997    0.014    0.000    0.014    0.000 picture.py:263(get_width)
     2997    0.011    0.000    0.011    0.000 picture.py:269(get_height)
      999    0.036    0.000    4.171    0.004 picture.py:275(crop)
        1    0.000    0.000    0.009    0.009 picture.py:447(create_image)
        1    0.000    0.000    0.009    0.009 picture.py:49(__init__)
        1    0.009    0.009    0.009    0.009 {_imaging.fill}
      999    2.055    0.002    2.055    0.002 {built-in method copy}
      999    1.629    0.002    1.629    0.002 {built-in method crop}
     1999    0.008    0.000    0.008    0.000 {built-in method pixel_access}
        2    0.000    0.000    0.000    0.000 {isinstance}
     1000    0.002    0.000    0.002    0.000 {method 'copy' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 {range}


Testing get_pixel

         3001 function calls in 0.032 CPU seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    0.032    0.032 <string>:1(<module>)
        1    0.008    0.008    0.032    0.032 ProfilingPictures.py:23(test_get_pixel)
      999    0.006    0.000    0.024    0.000 media.py:48(get_pixel)
      999    0.010    0.000    0.018    0.000 picture.py:227(get_pixel)
      999    0.008    0.000    0.008    0.000 pixel.py:6(__init__)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 {range}


        
Testing close
Exception in Tkinter callback
Traceback (most recent call last):
  File "/usr/lib/python2.6/lib-tk/Tkinter.py", line 1413, in __call__
    return self.func(*args)
  File "/usr/lib/python2.6/lib-tk/Tkinter.py", line 498, in callit
    func(*args)
  File "/home/noximist/PyGraphics/cpython/mediawindows.py", line 65, in _pump
    result = command()
  File "/home/noximist/PyGraphics/cpython/mediawindows.py", line 86, in func
    return f(*args, **kw)
  File "/home/noximist/PyGraphics/cpython/mediawindows.py", line 488, in _draw
    return canvas.create_image(x, y, image=self.img)
  File "/usr/lib/python2.6/lib-tk/Tkinter.py", line 2159, in create_image
    return self._create('image', args, kw)
  File "/usr/lib/python2.6/lib-tk/Tkinter.py", line 2150, in _create
    *(args + self._options(cnf, kw))))
TclError: image "pyimage1" doesn't exist
         358 function calls in 0.113 CPU seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    0.113    0.113 <string>:1(<module>)
        1    0.000    0.000    0.000    0.000 BmpImagePlugin.py:55(_accept)
        1    0.000    0.000    0.000    0.000 GifImagePlugin.py:47(_accept)
        1    0.000    0.000    0.001    0.001 Image.py:1880(open)
        1    0.000    0.000    0.000    0.000 Image.py:281(preinit)
        1    0.000    0.000    0.000    0.000 Image.py:362(_getdecoder)
        2    0.000    0.000    0.000    0.000 Image.py:440(__init__)
        1    0.000    0.000    0.000    0.000 Image.py:449(_new)
        6    0.000    0.000    0.000    0.000 Image.py:485(__getattr__)
        4    0.000    0.000    0.000    0.000 Image.py:588(load)
        1    0.000    0.000    0.008    0.008 Image.py:639(convert)
        2    0.000    0.000    0.000    0.000 Image.py:82(isStringType)
        1    0.000    0.000    0.000    0.000 Image.py:91(isTupleType)
        1    0.000    0.000    0.007    0.007 ImageFile.py:115(load)
        1    0.000    0.000    0.000    0.000 ImageFile.py:219(load_prepare)
        1    0.000    0.000    0.000    0.000 ImageFile.py:228(load_end)
        9    0.000    0.000    0.000    0.000 ImageFile.py:508(_safe_read)
        1    0.000    0.000    0.001    0.001 ImageFile.py:63(__init__)
        1    0.001    0.001    0.011    0.011 ImageTk.py:163(paste)
        1    0.000    0.000    0.012    0.012 ImageTk.py:80(__init__)
        1    0.000    0.000    0.000    0.000 JpegImagePlugin.py:104(SOF)
        2    0.000    0.000    0.000    0.000 JpegImagePlugin.py:138(DQT)
        1    0.000    0.000    0.000    0.000 JpegImagePlugin.py:231(_accept)
        1    0.000    0.000    0.001    0.001 JpegImagePlugin.py:242(_open)
       24    0.000    0.000    0.000    0.000 JpegImagePlugin.py:37(i16)
        5    0.000    0.000    0.000    0.000 JpegImagePlugin.py:46(Skip)
        1    0.000    0.000    0.000    0.000 JpegImagePlugin.py:50(APP)
        1    0.000    0.000    0.113    0.113 ProfilingPictures.py:60(test_close)
        2    0.000    0.000    0.001    0.000 Queue.py:107(put)
        2    0.000    0.000    0.090    0.045 Queue.py:150(get)
        4    0.000    0.000    0.000    0.000 Queue.py:200(_qsize)
        2    0.000    0.000    0.000    0.000 Queue.py:204(_put)
        2    0.000    0.000    0.000    0.000 Queue.py:208(_get)
        2    0.000    0.000    0.000    0.000 Tkinter.py:1723(__getattr__)
        1    0.000    0.000    0.001    0.001 Tkinter.py:3224(__init__)
        2    0.000    0.000    0.000    0.000 Tkinter.py:3246(__str__)
        1    0.000    0.000    0.001    0.001 Tkinter.py:3283(__init__)
        1    0.000    0.000    0.000    0.000 genericpath.py:26(isfile)
        1    0.000    0.000    0.010    0.010 media.py:27(load_picture)
        1    0.000    0.000    0.103    0.103 media.py:73(show)
        1    0.000    0.000    0.000    0.000 media.py:92(close)
        1    0.000    0.000    0.014    0.014 mediawindows.py:144(__init__)
        1    0.000    0.000    0.000    0.000 mediawindows.py:182(setCoords)
        1    0.000    0.000    0.000    0.000 mediawindows.py:188(close)
        1    0.000    0.000    0.000    0.000 mediawindows.py:19(__init__)
        1    0.000    0.000    0.000    0.000 mediawindows.py:199(is_closed)
        1    0.000    0.000    0.000    0.000 mediawindows.py:257(getHeight)
        1    0.000    0.000    0.000    0.000 mediawindows.py:261(getWidth)
        1    0.000    0.000    0.000    0.000 mediawindows.py:296(__init__)
        3    0.000    0.000    0.000    0.000 mediawindows.py:336(__init__)
        1    0.000    0.000    0.077    0.077 mediawindows.py:364(draw)
        2    0.000    0.000    0.000    0.000 mediawindows.py:442(__init__)
        1    0.000    0.000    0.000    0.000 mediawindows.py:459(clone)
        1    0.000    0.000    0.000    0.000 mediawindows.py:474(__init__)
        3    0.000    0.000    0.091    0.030 mediawindows.py:77(thread_exec_return)
        1    0.000    0.000    0.000    0.000 picture.py:108(set_image)
        1    0.000    0.000    0.000    0.000 picture.py:121(get_image)
        1    0.000    0.000    0.014    0.014 picture.py:135(_make_window)
        1    0.000    0.000    0.089    0.089 picture.py:148(_draw_image_to_win)
        1    0.000    0.000    0.103    0.103 picture.py:158(show)
        1    0.000    0.000    0.000    0.000 picture.py:192(close)
        1    0.000    0.000    0.000    0.000 picture.py:239(set_filename_and_title)
        1    0.000    0.000    0.000    0.000 picture.py:251(get_filename)
        1    0.000    0.000    0.000    0.000 picture.py:263(get_width)
        1    0.000    0.000    0.000    0.000 picture.py:269(get_height)
        1    0.000    0.000    0.009    0.009 picture.py:441(load_image)
        1    0.000    0.000    0.000    0.000 picture.py:454(get_short_path)
        1    0.000    0.000    0.010    0.010 picture.py:49(__init__)
        1    0.000    0.000    0.000    0.000 stat.py:24(S_IFMT)
        1    0.000    0.000    0.000    0.000 stat.py:49(S_ISREG)
        2    0.000    0.000    0.000    0.000 threading.py:213(_release_save)
        2    0.000    0.000    0.000    0.000 threading.py:216(_acquire_restore)
        6    0.000    0.000    0.000    0.000 threading.py:219(_is_owned)
        2    0.000    0.000    0.090    0.045 threading.py:228(wait)
        4    0.000    0.000    0.000    0.000 threading.py:270(notify)
        6    0.000    0.000    0.000    0.000 threading.py:64(_note)
        1    0.000    0.000    0.000    0.000 {_imaging.new}
        1    0.000    0.000    0.000    0.000 {_imagingtk.tkinit}
        2    0.000    0.000    0.001    0.000 {apply}
       16    0.089    0.006    0.089    0.006 {built-in method acquire}
        3    0.010    0.003    0.010    0.003 {built-in method call}
        1    0.000    0.000    0.000    0.000 {built-in method convert}
        1    0.007    0.007    0.007    0.007 {built-in method decode}
        1    0.000    0.000    0.000    0.000 {built-in method interpaddr}
        1    0.000    0.000    0.000    0.000 {built-in method isblock}
        3    0.000    0.000    0.000    0.000 {built-in method pixel_access}
        6    0.000    0.000    0.000    0.000 {built-in method release}
        1    0.000    0.000    0.000    0.000 {built-in method setimage}
        2    0.000    0.000    0.000    0.000 {callable}
        1    0.000    0.000    0.000    0.000 {divmod}
        3    0.000    0.000    0.000    0.000 {getattr}
        3    0.000    0.000    0.000    0.000 {hasattr}
        4    0.000    0.000    0.000    0.000 {isinstance}
       17    0.000    0.000    0.000    0.000 {len}
        2    0.000    0.000    0.000    0.000 {max}
        2    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
        6    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        2    0.000    0.000    0.000    0.000 {method 'copy' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
       10    0.000    0.000    0.000    0.000 {method 'has_key' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
        2    0.000    0.000    0.000    0.000 {method 'popleft' of 'collections.deque' objects}
       40    0.000    0.000    0.000    0.000 {method 'read' of 'file' objects}
        2    0.000    0.000    0.000    0.000 {method 'seek' of 'file' objects}
        1    0.000    0.000    0.000    0.000 {method 'sort' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {open}
       63    0.000    0.000    0.000    0.000 {ord}
        1    0.000    0.000    0.000    0.000 {posix.stat}
        2    0.000    0.000    0.000    0.000 {range}
        2    0.000    0.000    0.000    0.000 {thread.allocate_lock}

        
Testing update
         2002 function calls in 0.022 CPU seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    0.022    0.022 <string>:1(<module>)
        1    0.006    0.006    0.022    0.022 ProfilingPictures.py:55(test_update)
      999    0.009    0.000    0.016    0.000 media.py:86(update)
      999    0.007    0.000    0.007    0.000 picture.py:177(update)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 {range}


Display-heavy functions have been profiled.
